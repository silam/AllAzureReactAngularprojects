//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient.AsynchronousCallWCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AsynchronousCallWCFService.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetServerResponse", ReplyAction="http://tempuri.org/ICustomerService/GetServerResponseResponse")]
        string GetServerResponse(int value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICustomerService/GetServerResponse", ReplyAction="http://tempuri.org/ICustomerService/GetServerResponseResponse")]
        System.IAsyncResult BeginGetServerResponse(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetServerResponse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerDetails", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerDetailsResponse")]
        WCFClient.AsynchronousCallWCFService.Customer GetCustomerDetails(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICustomerService/GetCustomerDetails", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerDetailsResponse")]
        System.IAsyncResult BeginGetCustomerDetails(int customerID, System.AsyncCallback callback, object asyncState);
        
        WCFClient.AsynchronousCallWCFService.Customer EndGetCustomerDetails(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : WCFClient.AsynchronousCallWCFService.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WCFClient.AsynchronousCallWCFService.Customer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WCFClient.AsynchronousCallWCFService.Customer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<WCFClient.AsynchronousCallWCFService.ICustomerService>, WCFClient.AsynchronousCallWCFService.ICustomerService {
        
        private BeginOperationDelegate onBeginGetServerResponseDelegate;
        
        private EndOperationDelegate onEndGetServerResponseDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerResponseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDetailsDelegate;
        
        private EndOperationDelegate onEndGetCustomerDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerDetailsCompletedDelegate;
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetServerResponseCompletedEventArgs> GetServerResponseCompleted;
        
        public event System.EventHandler<GetCustomerDetailsCompletedEventArgs> GetCustomerDetailsCompleted;
        
        public string GetServerResponse(int value) {
            return base.Channel.GetServerResponse(value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerResponse(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerResponse(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetServerResponse(System.IAsyncResult result) {
            return base.Channel.EndGetServerResponse(result);
        }
        
        private System.IAsyncResult OnBeginGetServerResponse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return this.BeginGetServerResponse(value, callback, asyncState);
        }
        
        private object[] OnEndGetServerResponse(System.IAsyncResult result) {
            string retVal = this.EndGetServerResponse(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerResponseCompleted(object state) {
            if ((this.GetServerResponseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerResponseCompleted(this, new GetServerResponseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerResponseAsync(int value) {
            this.GetServerResponseAsync(value, null);
        }
        
        public void GetServerResponseAsync(int value, object userState) {
            if ((this.onBeginGetServerResponseDelegate == null)) {
                this.onBeginGetServerResponseDelegate = new BeginOperationDelegate(this.OnBeginGetServerResponse);
            }
            if ((this.onEndGetServerResponseDelegate == null)) {
                this.onEndGetServerResponseDelegate = new EndOperationDelegate(this.OnEndGetServerResponse);
            }
            if ((this.onGetServerResponseCompletedDelegate == null)) {
                this.onGetServerResponseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerResponseCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerResponseDelegate, new object[] {
                        value}, this.onEndGetServerResponseDelegate, this.onGetServerResponseCompletedDelegate, userState);
        }
        
        public WCFClient.AsynchronousCallWCFService.Customer GetCustomerDetails(int customerID) {
            return base.Channel.GetCustomerDetails(customerID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerDetails(int customerID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerDetails(customerID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WCFClient.AsynchronousCallWCFService.Customer EndGetCustomerDetails(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int customerID = ((int)(inValues[0]));
            return this.BeginGetCustomerDetails(customerID, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerDetails(System.IAsyncResult result) {
            WCFClient.AsynchronousCallWCFService.Customer retVal = this.EndGetCustomerDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerDetailsCompleted(object state) {
            if ((this.GetCustomerDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerDetailsCompleted(this, new GetCustomerDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerDetailsAsync(int customerID) {
            this.GetCustomerDetailsAsync(customerID, null);
        }
        
        public void GetCustomerDetailsAsync(int customerID, object userState) {
            if ((this.onBeginGetCustomerDetailsDelegate == null)) {
                this.onBeginGetCustomerDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerDetails);
            }
            if ((this.onEndGetCustomerDetailsDelegate == null)) {
                this.onEndGetCustomerDetailsDelegate = new EndOperationDelegate(this.OnEndGetCustomerDetails);
            }
            if ((this.onGetCustomerDetailsCompletedDelegate == null)) {
                this.onGetCustomerDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDetailsDelegate, new object[] {
                        customerID}, this.onEndGetCustomerDetailsDelegate, this.onGetCustomerDetailsCompletedDelegate, userState);
        }
    }
}
